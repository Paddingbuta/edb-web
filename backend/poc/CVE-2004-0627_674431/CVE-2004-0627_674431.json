{
    "bugid": "674431",
    "cveid": [
        "CVE-2004-0627",
        "CVE-2004-0628"
    ],
    "summary": "CVE-2004-0627 CVE-2004-0628 MySQL: check_scramble_323 authentication bypass and buffer overflow",
    "alias": "CVE-2004-0627, CVE-2004-0628",
    "product": "Security Response",
    "hardware": "All",
    "os": "Linux",
    "url": "",
    "reported_date": "2011-02-01 21:04 UTC byJosh Bressers",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=476481"
    ],
    "comment": [
        "CVE-2004-0627:\n\nThe check_scramble_323 function in MySQL 4.1.x before 4.1.3, and 5.0,\nallows remote attackers to bypass authentication via a zero-length\nscrambled string.http://archives.neohapsis.com/archives/vulnwatch/2004-q3/0001.htmlhttp://marc.theaimsgroup.com/?l=bugtraq&m=108904917528205&w=2http://www.kb.cert.org/vuls/id/184030",
        "Createdattachment 476481[details]Demo exploit, for posterity.\n\nThis exploit is broken, and since it's needed to show why it's broken, I'm adding it. I imagine it will be lost to the sands of time eventually.\n\nSource:http://www.securityfocus.com/bid/10654/exploit",
        "The below analysis was written by Tom Lane.\n\n\nThe CVE entry links to a detailed explanation of the bug athttp://archives.neohapsis.com/archives/vulnwatch/2004-q3/0001.htmlwhich includes the faulty source code from mysql 4.1:\n\n  to=buff;\n  for (pos=scrambled ; *pos ; pos++)\n    *to++=(char) (floor(my_rnd(&rand_st)*31)+64);\n\nIn mysql 5.0.77 the same part of check_scramble_323() looks like\n\n  to=buff;\n  DBUG_ASSERT(sizeof(buff) > SCRAMBLE_LENGTH_323);\n  for (pos=scrambled ; *pos && to < buff+sizeof(buff) ; pos++)\n    *to++=(char) (floor(my_rnd(&rand_st)*31)+64);\n  if (pos-scrambled != SCRAMBLE_LENGTH_323)\n    return 1;\n\nSo this has been hardened both by guarding against too long password\n(which formerly would overrun the local buff[] variable) and by checking\nfor the exact expected length, which ought to stop the described attack.\nThe latter change is what you fingered as being the relevant 5.0 commit;\nI guess they noticed the overrun risk later.  SoCVE-2004-0627is\ndefinitely fixed in 5.0.77, and presumably ever since 5.0.1.\n\nI also tried the exploit script athttp://www.securityfocus.com/bid/10654/exploitand concluded that it is broken.  Tracing the server's behavior with\ngdb, I see that what actually happens is that the server thinks the\nclient has sent a new-style password, but the server knows it has an\nold-style password (as a result of our defaulting to old_password=1 in\n/etc/my.cnf).  It sends a challenge packet to the client asking for\nthe password to be resent in old style (see\nsend_old_password_request).  The exploit script is misinterpreting\nthat packet as a success response.  So far as I can tell,\ncheck_scramble_323() is never reached at all in this test.",
        "Createdattachment 476540[details]Authentication bypass fix\n\nThe fix for the authentication bypass issue mentioned in the previous comment.http://bazaar.launchpad.net/~mysql/mysql-server/mysql-5.0/revision/1616.440.16http://bazaar.launchpad.net/~mysql/mysql-server/mysql-4.1/revision/1843.6.16",
        "The buffer overflow mentioned in the report and previous comments was assigned CVE-2004-0628:\n\nStack-based buffer overflow in MySQL 4.1.x before 4.1.3, and 5.0, allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via a long scramble string.http://archives.neohapsis.com/archives/vulnwatch/2004-q3/0001.htmlhttp://marc.theaimsgroup.com/?l=bugtraq&m=108904917528205&w=2http://xforce.iss.net/xforce/xfdb/16612http://www.kb.cert.org/vuls/id/645326It seems this overflow was only fixed few months later:http://bugs.mysql.com/bug.php?id=7187http://bazaar.launchpad.net/~mysql/mysql-server/mysql-5.0/revision/1616.1357.22http://bazaar.launchpad.net/~mysql/mysql-server/mysql-4.1/revision/2055.209.22",
        "Createdattachment 476542[details]Buffer overflow fix",
        "Bit of a history note - check_scramble_323 was apparently based on check_scramble from 3.x versions.  MySQL 3.x had rather similar issue in 2000 - seeCVE-2000-0148.  It was addressed by adding password length check earlier in the code, rather than in check_scramble directly.",
        "Statement:\n\nNot vulnerable. This issue did not affect the versions of MySQL as shipped with Red Hat Enterprise Linux 4, 5, or 6."
    ]
}