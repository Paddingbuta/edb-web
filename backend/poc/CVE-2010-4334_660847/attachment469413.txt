#!/usr/bin/perl -w

use strict;
use IO::Socket::SSL; # qw(debug2);

if (!defined($ARGV[0])) {
	print "usage: $0 host[:port] [cacert]\n";
	exit 1;
}

my $host = $ARGV[0];
my $port = 443;
if ($host =~ /^(.*):([0-9]+)$/) {
	$host = $1;
	$port = $2;
}

my $certfile;
if (defined($ARGV[1])) {
	$certfile = $ARGV[1];
}


my %sslopts = (
		PeerAddr		=> $host,
		PeerPort		=> $port,
		SSL_verify_mode	=> 0x1,
	);


if (defined($certfile)) {
	$sslopts{'SSL_ca_file'} = $certfile;
} else {
	$certfile = '<none>';
}
print "connecting to: $host:$port\ncertfile: $certfile\n\n";

my $client = IO::Socket::SSL->new(%sslopts)
	|| die "ssl connection failed: ".IO::Socket::SSL::errstr();

#$client->verify_hostname( $host,'http' )
#	|| die "hostname verification failed";

print $client "GET / HTTP/1.1\r\nHost: $host\r\n\r\n";
my $doprint = 1;
while (<$client>) {
	if ($doprint) {
		s/[\n\r]*$//;
		if (/^$/) {
			$doprint = 0;
		} else{
			print "$_\n";
		}
	}
}
print "\n";

print $client->dump_peer_certificate();

