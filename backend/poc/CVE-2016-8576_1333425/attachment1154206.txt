(gdb) b xhci_ring_fetch
Breakpoint 1 at 0x7fe2a5ec6619: file hw/usb/hcd-xhci.c, line 998.
(gdb) b xhci_oper_write
Breakpoint 2 at 0x7fe2a5ecbe53: file hw/usb/hcd-xhci.c, line 3157.
(gdb) b xhci_doorbell_write
Breakpoint 3 at 0x7fe2a5ecc4cf: file hw/usb/hcd-xhci.c, line 3338.
(gdb) c
Continuing.
[Thread 0x7fe299c87700 (LWP 9841) exited]
[New Thread 0x7fe299c87700 (LWP 9878)]
[Switching to Thread 0x7fe298c8d700 (LWP 9751)]

Breakpoint 2, xhci_oper_write (ptr=0x7fe252538010, reg=24, val=0, size=4)
at hw/usb/hcd-xhci.c:3157
3157 {
(gdb) n
3158 XHCIState *xhci = ptr;
(gdb) n
3159 DeviceState *d = DEVICE(ptr);
(gdb) n
[Thread 0x7fe299c87700 (LWP 9878) exited]
3161 trace_usb_xhci_oper_write(reg, val);
(gdb) n
3163 switch (reg) {
(gdb) n
3196 xhci->crcr_low = (val & 0xffffffcf) | (xhci->crcr_low & CRCR_CRR);
(gdb) n
3197 break;
(gdb) c
Continuing.

Breakpoint 2, xhci_oper_write (ptr=0x7fe252538010, reg=24, val=619630592,
size=4) at hw/usb/hcd-xhci.c:3157
3157 {
(gdb) n
3158 XHCIState *xhci = ptr;
(gdb) n
3159 DeviceState *d = DEVICE(ptr);
(gdb) n
3161 trace_usb_xhci_oper_write(reg, val);
(gdb) n
3163 switch (reg) {
(gdb) n
3196 xhci->crcr_low = (val & 0xffffffcf) | (xhci->crcr_low & CRCR_CRR);
(gdb) n
3197 break;
(gdb) c
Continuing.

Breakpoint 2, xhci_oper_write (ptr=0x7fe252538010, reg=28, val=0, size=4)
at hw/usb/hcd-xhci.c:3157
3157 {
(gdb) n
3158 XHCIState *xhci = ptr;
(gdb) n
3159 DeviceState *d = DEVICE(ptr);
(gdb) n
3161 trace_usb_xhci_oper_write(reg, val);
(gdb) n
3163 switch (reg) {
(gdb) n
3199 xhci->crcr_high = val;
(gdb) n
3200 if (xhci->crcr_low & (CRCR_CA|CRCR_CS) && (xhci->crcr_low & CRCR_CRR)) {
(gdb) n
3206 dma_addr_t base = xhci_addr64(xhci->crcr_low & ~0x3f, val);
(gdb) n
3207 xhci_ring_init(xhci, &xhci->cmd_ring, base);
(gdb) n
3209 xhci->crcr_low &= ~(CRCR_CA | CRCR_CS);
(gdb) n
3210 break;
(gdb) c
Continuing.

Breakpoint 3, xhci_doorbell_write (ptr=0x7fe252538010, reg=0, val=0, size=4)
at hw/usb/hcd-xhci.c:3338
3338 XHCIState *xhci = ptr;
(gdb) n
3341 trace_usb_xhci_doorbell_write(reg, val);
(gdb) n
3343 if (!xhci_running(xhci)) {
(gdb) n
3348 reg >>= 2;
(gdb) n
3350 if (reg == 0) {
(gdb) n
3351 if (val == 0) {
(gdb) n
3352 xhci_process_commands(xhci);
(gdb) s
xhci_process_commands (xhci=0x7fe252538010) at hw/usb/hcd-xhci.c:2690
2690 {
(gdb) n
2693 XHCIEvent event = {ER_COMMAND_COMPLETE, CC_SUCCESS};
(gdb) n
2695 unsigned int i, slotid = 0;
(gdb) n
2698 if (!xhci_running(xhci)) {
(gdb) n
2703 xhci->crcr_low |= CRCR_CRR;
(gdb) n
2705 while ((type = xhci_ring_fetch(xhci, &xhci->cmd_ring, &trb, &addr))) {
(gdb) s

Breakpoint 1, xhci_ring_fetch (xhci=0x7fe252538010, ring=0x7fe2527ffb88,
trb=0x7fe298c8c810, addr=0x7fe298c8c808) at hw/usb/hcd-xhci.c:998
998 PCIDevice *pci_dev = PCI_DEVICE(xhci);
(gdb) n
1002 pci_dma_read(pci_dev, ring->dequeue, trb, TRB_SIZE);
(gdb) n
1003 trb->addr = ring->dequeue;
(gdb) p /x *trb
$1 = {parameter = 0x24eed000, status = 0x0, control = 0x1801,
addr = 0x7fe298c8c870, ccs = 0x44}
(gdb) n
1004 trb->ccs = ring->ccs;
(gdb) n
1005 le64_to_cpus(&trb->parameter);
(gdb) n
1006 le32_to_cpus(&trb->status);
(gdb) n
1007 le32_to_cpus(&trb->control);
(gdb) n
1009 trace_usb_xhci_fetch_trb(ring->dequeue, trb_name(trb),
(gdb) n
1012 if ((trb->control & TRB_C) != ring->ccs) {
(gdb) n
1016 type = TRB_TYPE(*trb);
(gdb) n
1018 if (type != TR_LINK) {
(gdb) p type
$2 = TR_LINK
(gdb) n
1025 ring->dequeue = xhci_mask64(trb->parameter);
(gdb) n
1026 if (trb->control & TRB_LK_TC) {
(gdb) p /x ring->dequeue
$3 = 0x24eed000
(gdb) n
1002 pci_dma_read(pci_dev, ring->dequeue, trb, TRB_SIZE);
(gdb) n
1003 trb->addr = ring->dequeue;
(gdb) c
Continuing.
^C
Program received signal SIGINT, Interrupt.
[Switching to Thread 0x7fe2a6345bc0 (LWP 9748)]
0x00007fe2a48e1f4d in __lll_lock_wait () from /lib64/libpthread.so.0
(gdb) q
A debugging session is active.

Inferior 1 [process 9748] will be detached.

Quit anyway? (y or n) y
Detaching from program: /root/qemu-2.5.0/x86_64-softmmu/qemu-system-x86_64, process 9748

PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND
9748 root 20 0 1577400 694652 12812 S 100.3 22.6 3:01.48 qemu-system-x86

TEST ENVIRONMENT
_____

host: CentOS 7 x64
guest:CentOS 6.7 x64,kernel verison:3.10.101
http://wiki.qemu-project.org/download/qemu-2.5.0.tar.bz2

