journal_unmap_buffer()'s zap_buffer: code clears a lot of buffer head
state ala discard_buffer(), but does not touch _Delay or _Unwritten
as discard_buffer() does.

This can be problematic in some areas of the ext4 code which assume
that if they have found a buffer marked unwritten or delay, then it's
a live one.  They do not check whether a buffer is mapped, so
jbd2's partial teardown can be problematic if they assume that
this buffer head is still valid.

This was discovered by running fsx; the problem has gone away
upstream thanks to commit 4e96b2dbbf1d7e81f22047a50f862555a6cb87cb,
but this small, targeted patch is still appropriate for upstream,
since it gets to the root of the problem, because ->invalidatepage
leads here directly, and it's the right place to clear away these
flags.

(Mounting without a journal also avoids the bug, because
with no journal we go to unmap_buffer(), which does the right
thing).

Signed-off-by: Eric Sandeen <sandeen@redhat.com>
---

diff --git a/fs/jbd2/transaction.c b/fs/jbd2/transaction.c
index b8e0806..9c31564 100644
--- a/fs/jbd2/transaction.c
+++ b/fs/jbd2/transaction.c
@@ -1836,6 +1836,8 @@ zap_buffer_unlocked:
        clear_buffer_mapped(bh);
        clear_buffer_req(bh);
        clear_buffer_new(bh);
+       clear_buffer_delay(bh);
+       clear_buffer_unwritten(bh);
        bh->b_bdev = NULL;
        return may_free;
 }                                                                                                                                                           

