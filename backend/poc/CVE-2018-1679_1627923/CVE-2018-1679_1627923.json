{
    "bugid": "1627923",
    "cveid": [
        "CVE-2018-1679"
    ],
    "summary": "CVE-2018-16790 libbson: Heap-based buffer over-read in _bson_iter_next_internal in bson-iter.c",
    "alias": "CVE-2018-16790",
    "product": "Security Response",
    "hardware": "All",
    "os": "Linux",
    "url": "",
    "reported_date": "2018-09-11 21:29 UTC byPedro Sampaio",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=1482654"
    ],
    "comment": [
        "The function _bson_iter_next_internal in bson-iter.c in libbson 1.12.0, as used in MongoDB mongo-c-driver and other products, has a heap-based buffer over-read via a crafted bson buffer.\n\nUpstream bug:https://jira.mongodb.org/browse/CDRIVER-2819",
        "Created libbson tracking bugs for this issue:\n\nAffects: epel-7 [bug 1627925]\nAffects: fedora-all [bug 1627924]",
        "libbson was merged into mongo-c-driver in Fedora \u2265 29.",
        "Createdattachment 1482654[details]Reproducer\n\nBased on the upstream report.\n\nValgrind reports for libbson-1.9.5:\n\n==9083== Conditional jump or move depends on uninitialised value(s)\n==9083==    at 0x4859161: _bson_iter_next_internal (bson-iter.c:600)\n==9083==    by 0x485A824: bson_iter_visit_all (bson-iter.c:1900)\n==9083==    by 0x48572CF: _bson_as_json_visit_all (bson.c:3121)\n==9083==    by 0x4012BF: main (in /tmp/a.out)\n\nValgrind reports for libbson bundled within mongo-c-driver-1.12.0:\n\n==9084== Conditional jump or move depends on uninitialised value(s)\n==9084==    at 0x4868829: _bson_iter_next_internal (bson-iter.c:634)\n==9084==    by 0x486A454: bson_iter_visit_all (bson-iter.c:1934)\n==9084==    by 0x4865BCA: _bson_as_json_visit_all (bson.c:3158)\n==9084==    by 0x4012BF: main (in /tmp/a.out)\n\nBoth of them point uninitialized value read at:\n\n      if (subtype == BSON_SUBTYPE_BINARY_DEPRECATED) {\n         int32_t binary_len;\n\n         if (l < 4) {\n            iter->err_off = o;\n            goto mark_invalid;\n         }\n\n         /* subtype 2 has a redundant length header in the data */\n         memcpy (&binary_len, (iter->raw + iter->d3), sizeof (binary_len));\n         binary_len = BSON_UINT32_FROM_LE (binary_len);\n\u2192        if (binary_len + 4 != l) {\n            iter->err_off = iter->d3;\n            goto mark_invalid;\n         }\n      }\n\nWhile sanitizer reports a buffer overread at two different places:\n\n      if (subtype == BSON_SUBTYPE_BINARY_DEPRECATED) {\n         int32_t binary_len;\n\n         if (l < 4) {\n\u2192           iter->err_off = o;\n            goto mark_invalid;\n         }\n\n         /* subtype 2 has a redundant length header in the data */\n\u2192        memcpy (&binary_len, (iter->raw + iter->d3), sizeof (binary_len));\n         binary_len = BSON_UINT32_FROM_LE (binary_len);\n         if (binary_len + 4 != l) {\n            iter->err_off = iter->d3;\n            goto mark_invalid;\n         }\n      }",
        "Reduced the reproducer to something a bit more actionable. Working upstream here:https://jira.mongodb.org/browse/CDRIVER-2819, but I'll post the comment here as well.\n\nLooks like we're running off the end of a binary buffer.\n\nReproducer that triggers the ASAN error can be reduced to:\n{0x11, 0x0, 0x0, 0x0, 0x5, 0xe, 0x19, 0x2e, 0x0, 0x4, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0}\n\nwhich I believe decodes to:\n\n0x11, 0x0, 0x0, 0x0 \u2013 Length of document is 0x11 (17) bytes\n0x5, \u2013 binary data\n0xe, 0x19, 0x2e, 0x0 \u2013 cstr\n0x4, 0x0, 0x0, 0x0 \u2013 length of binary element (4)\n0x2, \u2013 binary subtype (Binary (Old))\n0x0, 0x0, 0x0, (Missing final byte)\n\nThus, if we change the final binary length to a 3 instead of a 4, we no longer trigger the out of bounds read.\n\nLooking at the code now...",
        "Upstream Patch:https://github.com/mongodb/mongo-c-driver/commit/0d9a4d98bfdf4acd2c0138d4aaeb4e2e0934bd84",
        "Created mongo-c-driver tracking bugs for this issue:\n\nAffects: fedora-all [bug 1630042]",
        "EPEL7's libbson-1.3.5 does not manifest this bug because bson_iter_next() does not read the redundant length header of BSON_SUBTYPE_BINARY_DEPRECATED by memcpy(). Otherwise the parser code is the same. I will apply the fix there. Making the parser stricter is not a bad thing."
    ]
}