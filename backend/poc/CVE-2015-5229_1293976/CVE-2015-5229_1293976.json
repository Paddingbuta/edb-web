{
    "bugid": "1293976",
    "cveid": [
        "CVE-2015-5229"
    ],
    "summary": "CVE-2015-5229 glibc: calloc() returns non-zero'ed memory [rhel-7.3.0]",
    "alias": "None",
    "product": "Red Hat Enterprise Linux 7",
    "hardware": "All",
    "os": "Linux",
    "url": "",
    "reported_date": "2015-12-23 21:05 UTC byJeff Layton",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=1109015"
    ],
    "comment": [
        "+++ This bug was initially created as a clone ofBug #1246713+++\n\nDescription of problem:\nAt Facebook we had an app that started hanging and crashing weirdly when going from glibc-2.12-1.149.el6.x86_64 to glibc-2.12-1.163.el6.x86_64.  Turns out this patch\n\nglibc-rh1066724.patch\n\nIntroduced the problem.\n\nYou added the following bit to _int_malloc()\n\n+  /* There are no usable arenas.  Fall back to sysmalloc to get a chunk from\n+     mmap.  */\n+  if (__glibc_unlikely (av == NULL))\n+    {\n+      void *p = sYSMALLOc (nb, av);\n+      if (p != NULL)\n+       alloc_perturb (p, bytes);\n+      return p;\n+    }\n+\n\nBut this isn't ok, alloc_perturb unconditionally memset's the front byte to 0xf, unlike upstream where it checks to see if perturb_byte is set.  This needs to be changed to\n\nif (p != NULL && && __builtin_expect(perturb_byte, 0))\n   alloc_perturb (p, bytes);\nreturn p;\n\nThe patch I've attached fixes the problem for me.\n\nThis problem is exacerbated by the fact that any sort of lock contention on the arena's results in us falling back on mmap()'ing a new chunk.  This is because we check to see if the uncontended arena we check is corrupt, and if it is we loop through, and if we loop to the beginning we know we didn't find anything.  Except if our initial arena isn't actually corrupt we'll still return NULL, so we fall back on this mmap() thing more often, which really makes things unstable.\n\nPlease get this fixed as soon as possible, I'd even go so far as to call it a possible security issue.\n\n--- Additional comment from Carlos O'Donell on 2015-07-24 23:11:01 EDT ---\n\n(In reply to Josef Bacik fromcomment #0)> Createdattachment 1055966[details]> patch to fix the problem.\n> \n> Description of problem:\n> At Facebook we had an app that started hanging and crashing weirdly when\n> going from glibc-2.12-1.149.el6.x86_64 to glibc-2.12-1.163.el6.x86_64.Please note that there is already a RHEL 6.7.z errata that fixes this, and it was released two days ago:https://rhn.redhat.com/errata/RHBA-2015-1465.htmlPlease update to glibc-2.12-1.166.el6_7.1.\n\nOne question, when you write \"glibc-2.12-1.163.el6.x86_64\" do you actually mean \"glibc-2.12-1.166.el6.x86_64?\" (note .166 not .163)?\n\nLastly, the robust malloc support has been backed out for the release, but we plan to put it back in as soon as we are certain we've corrected the remaining issues. Would you be interested in testing an unsupported non-production build with the new feature?\n\n--- Additional comment from Josef Bacik on 2015-07-25 11:44:01 EDT ---\n\nWe're on Centos, not RHEL, we just happened to end up with the .163 release (I'm not sure how) before 6.7 was released.  Give me whatever package you want me to test, we don't care about unsupported, obviously we are capable of supporting ourselves ;).  I do need to have an src.rpm tho so I can build and test it on our systems and verify the issue I was seeing is actually fixed.\n\n--- Additional comment from Carlos O'Donell on 2015-08-04 14:59:49 EDT ---\n\n(In reply to Josef Bacik fromcomment #5)> We're on Centos, not RHEL, we just happened to end up with the .163 release\n> (I'm not sure how) before 6.7 was released.  Give me whatever package you\n> want me to test, we don't care about unsupported, obviously we are capable\n> of supporting ourselves ;).  I do need to have an src.rpm tho so I can build\n> and test it on our systems and verify the issue I was seeing is actually\n> fixed.Sounds good. We'll get you something when we're ready. Thanks for agreeing to test :-)\n\n--- Additional comment from Siddhesh Poyarekar on 2015-08-20 00:43:00 EDT ---\n\nRemoving the \"already fixed in 6.7.z\" from the title because it confused me the couple of times I read it.\n\n--- Additional comment from Florian Weimer on 2015-08-24 05:58:22 EDT ---\n\nThis issue has been addressed in the following products:\n\n  Red Hat Enterprise Linux 6\n\nVia RHBA-2015:1465https://rhn.redhat.com/errata/RHBA-2015-1465.htmlThe SRPM is available here:ftp://ftp.redhat.com/pub/redhat/linux/enterprise/6Server/en/os/SRPMS/glibc-2.12-1.166.el6_7.1.src.rpm",
        "RHEL7 seems to have the same problem as Josef reported here. Attaching a reproducer and a patch that fixes this.",
        "Createdattachment 1109015[details]reproducer for the problem\n\nReproducer. Build this and watch the asserts pop.",
        "Createdattachment 1109016[details]patch - malloc: only do the alloc_perturb if the perturb_byte isn't 0\n\nThis patch fixes the problem for me.",
        "Note that we have an official support contract as well and have opened a case for this:https://access.redhat.com/support/cases/#/case/01558997",
        "Oh and to be clear, this is seen in glibc-2.17-106.el7_2.1.",
        "...and appears to be a regression from RHEL7.1 (just by inspection, I haven't actually tested it on RHEL7.1 to confirm it though).",
        "***Bug 1294080has been marked as a duplicate of this bug. ***",
        "This is indeed a regression between rhel-7.1 and rhel-7.2. We dropped one of the fixes that went into rhel-6.7/rhel-6.8 and we should not have, to be specific it was this fix:\n\ncommit e8349efd466cfedc0aa98be61d88ca8795c9e565\nAuthor: Ond\u0159ej B\u00edlka <neleai>\nDate:   Mon Dec 9 17:25:19 2013 +0100\n\n    Simplify perturb_byte logic.\n\nWhich is the correct way to resolve this problem by simplifying the perturbation logic to match upstream (moves the perturb == 0 check into one central place).",
        "We consider this a serious issue and are looking into resolving this as quickly as possible. If you have any questions please don't hesitate to ask.\n\nOne possible workaround on affected systems may be to set the environment variable MALLOC_PERTURB to 255 to nullify the perturbation effects e.g. 0xff ^ 0xff == 0. This has performance implications though since that additional operation and write have a non-zero cost.",
        "Thanks,\n\nYes, commit e8349efd466c seems like a much better fix since you always want to check the perturb_byte value before applying it.\n\nWe're also aware of the workaround and it does work. We decided instead to just build a glibc package for now with the patch above to use internally until RH releases an official fix.\n\nLet us know if you'd like us to test out anything in the meantime.",
        "(In reply to Jeff Layton fromcomment #15)> Thanks,\n> \n> Yes, commit e8349efd466c seems like a much better fix since you always want\n> to check the perturb_byte value before applying it.\n> \n> We're also aware of the workaround and it does work. We decided instead to\n> just build a glibc package for now with the patch above to use internally\n> until RH releases an official fix.\n> \n> Let us know if you'd like us to test out anything in the meantime.Thank you for the feedback Jeff.",
        "(In reply to Jeff Layton fromcomment #2)> Createdattachment 1109015[details]> reproducer for the problem\n> \n> Reproducer. Build this and watch the asserts pop.Thanks, I expanded it and committed it upstream:https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=1bd5483e104c8bde6e61dc5e3f8a848bc861872d",
        "Actually the reproducer was provided by Idan Kedar <idank>...I cc'ed him here (I should have credited him when I uploaded it originally, my bad...)",
        "We're at over a month since I first reported this. Any ETA on when the fixed packages will show up in the repo?",
        "(In reply to Jeff Layton fromcomment #20)> We're at over a month since I first reported this. Any ETA on when the fixed\n> packages will show up in the repo?Do you need immediate fix for this in rhel-7.2.z? Is this a production issue for you? Please talk to GSS if the workaround (set MALLOC_PERTRUB=255) is not working.\n\nWe plan to fix this for rhel-7.3.0 and rhel-7.2.z. The general availability of RHEL 7.3 is sometime in the future. The release of a rhel-7.2.z is also sometime in the future. I can't give you any specific dates unfortunately. \n\nAll I can say is that we are releasing a rhel-7.2.z update as soon as we possibly can. I apologize for the delay.",
        "Since the problem described in this bug report should be\nresolved in a recent advisory, it has been closed with a\nresolution of ERRATA.\n\nFor information on the advisory, and where to find the updated\nfiles, follow the link below.\n\nIf the solution does not work for you, open a new bug report.https://rhn.redhat.com/errata/RHSA-2016-2573.html"
    ]
}