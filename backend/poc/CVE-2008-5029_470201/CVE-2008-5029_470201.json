{
    "bugid": "470201",
    "cveid": [
        "CVE-2008-5029"
    ],
    "summary": "CVE-2008-5029 kernel: Unix sockets kernel panic",
    "alias": "CVE-2008-5029",
    "product": "Security Response",
    "hardware": "All",
    "os": "Linux",
    "url": "",
    "reported_date": "2008-11-06 09:07 UTC byEugene Teo (Security Response)",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=322676",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=322845"
    ],
    "comment": [
        "http://marc.info/?l=linux-netdev&m=122593044330973&w=2\"The following code causes a kernel panic on Linux 2.6.26:http://darkircop.org/unix.cI haven't investigated the bug so I'm not sure what is causing it, and don't know if it's exploitable.  The code passes unix sockets from one process to another using unix sockets.  The bug probably has to do with closing file descriptors.\"",
        "Createdattachment 322676[details]Reproducer -http://darkircop.org/unix.c",
        "Every Linux kernel is vulnerable to this as far as I can tell.\n\nThe problem is that __scm_destroy() can close a socket via fput()\nwhich can lead back into __scm_destroy() and so on and so forth.\n\nI'll attach the patch I'm currently testing, it's based upon a\nsuggested implementation from Linus.",
        "Createdattachment 322702[details]potential fix for __scm_destroy() recursion",
        "I managed to reproduce the problem easily on:\nkernel-rt-2.6.24.7-91.el5rt.i686\nkernel-2.6.9-78.0.8.EL.i686\n\nI had a little problem reproducing it on kernel-2.6.18-92.1.17.el5.i686, but a while loop helps.",
        "Createdattachment 322845[details]Another reproducer -http://darkircop.org/unix2.c",
        "Upstream commits:http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=f8d570ahttp://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=3b53fbfLuis, please ensure that the patch you added to -92 is the same one as f8d570a/3b53fbf. Thanks.",
        "(In reply tocomment #9)> Upstream commits:\n>http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=f8d570a>http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=3b53fbfDave, looks like Andrea is still seeing problems with this patch?http://marc.info/?l=linux-netdev&m=122598444310928&w=2Thanks, Eugene",
        "Createdattachment 323161[details]second part of fix\n\nAs well as the __scm_destroy() recursion patch, this fix\nfor AF_UNIX garbage collection is needed to cure all of the\ndiscovered problems.",
        "Andrea's problems are fully resolved if the __scm_destroy() and\nthe AF_UNIX garbage collector patch are both applied.",
        "(In reply tocomment #13)> Created an attachment (id=323161) [details]\n> second part of fix\n> \n> As well as the __scm_destroy() recursion patch, this fix\n> for AF_UNIX garbage collection is needed to cure all of the\n> discovered problems.This is:http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=6209344",
        "Note this is a prereq patch for the other 2:http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff_plain;h=1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9",
        "FWIW (should have done this earlier), I'm trying the test case on a 122.el5 kernel and its not crashing.  sendmsg always fails with an -EPIPE (which is odd, given that it was created with socketpair).  Investigating as to why",
        "scartch that, it just took several tries to get it to lock up the system.",
        "From dann frazier in oss-security list:\n\n\"Thanks for following up.\n\nfyi, our testing of this fix has uncovered additional issues.\nLocal/unprivileged users can cause soft lockups and take out system\nprocesses by triggering the OOM killer:http://marc.info/?l=linux-netdev&m=122721862313564&w=2\"\n\nDave, take note.",
        "(In reply tocomment #20)> From dann frazier in oss-security list:\n> \n> \"Thanks for following up.\n> \n> fyi, our testing of this fix has uncovered additional issues.\n> Local/unprivileged users can cause soft lockups and take out system\n> processes by triggering the OOM killer:\n>http://marc.info/?l=linux-netdev&m=122721862313564&w=2\"Bug reported at:http://marc.info/?l=linux-netdev&m=122721862313564&w=2",
        "I tested 2.6.24.7-94.el5rt x86_64 by running unix or unix2 in a loop. It can invoke the oom-killer pretty quickly, but I did not see the soft lockups that Dann observed. Dave, any comments?\n\n---\nmaster invoked oom-killer: gfp_mask=0x1200d2, order=0, oomkilladj=0\nPid: 1798, comm: master Not tainted 2.6.24.7-94.el5rt #1\n\nCall Trace:\n [<ffffffff81087cca>] out_of_memory+0x9d/0x2cb\n [<ffffffff8108acd5>] __alloc_pages+0x27d/0x312\n [<ffffffff810a3a44>] alloc_page_vma+0xb7/0xc6\n [<ffffffff8109e36c>] read_swap_cache_async+0x4f/0x103\n [<ffffffff81093d45>] swapin_readahead+0x61/0xcd\n [<ffffffff810952c8>] handle_mm_fault+0x408/0x764\n [<ffffffff81289ec0>] do_page_fault+0x3ba/0x76d\n [<ffffffff810336d4>] ? default_wake_function+0x0/0x14\n [<ffffffff810336d4>] ? default_wake_function+0x0/0x14\n [<ffffffff810336d4>] ? default_wake_function+0x0/0x14\n [<ffffffff812882d9>] error_exit+0x0/0x51\n [<ffffffff8113c7fd>] ? copy_user_generic_string+0x2d/0x40\n [<ffffffff810bde13>] ? core_sys_select+0x200/0x275\n [<ffffffff81056cd4>] ? getnstimeofday+0x31/0x88\n [<ffffffff8113a2d0>] ? rb_insert_color+0x68/0xe3\n [<ffffffff81041b34>] ? timespec_add_safe+0x37/0x64\n [<ffffffff8105401e>] ? enqueue_hrtimer+0xda/0xe8\n [<ffffffff81054c41>] ? ktime_get_ts+0x46/0x4b\n [<ffffffff810be03f>] ? sys_select+0x7e/0xa6\n [<ffffffff8100c22e>] ? system_call_ret+0x0/0x5\n\nNode 0 DMA per-cpu:\nCPU    0: Hot: hi:    0, btch:   1 usd:   0   Cold: hi:    0, btch:   1 usd:   0\nNode 0 DMA32 per-cpu:\nCPU    0: Hot: hi:  186, btch:  31 usd: 161   Cold: hi:   62, btch:  15 usd:  56\nActive:9 inactive:32 dirty:0 writeback:0 unstable:0\n free:1174 slab:122808 mapped:1 pagetables:377 bounce:0\nNode 0 DMA free:1988kB min:52kB low:64kB high:76kB active:0kB inactive:0kB present:9696kB pages_scanned:0 al\nl_unreclaimable? yes\nlowmem_reserve[]: 0 484 484 484\nNode 0 DMA32 free:2708kB min:2788kB low:3484kB high:4180kB active:156kB inactive:0kB present:495940kB pages_\nscanned:174218 all_unreclaimable? yes\nlowmem_reserve[]: 0 0 0 0\nNode 0 DMA: 1*4kB 0*8kB 0*16kB 0*32kB 1*64kB 1*128kB 1*256kB 1*512kB 1*1024kB 0*2048kB 0*4096kB = 1988kB\nNode 0 DMA32: 17*4kB 0*8kB 1*16kB 0*32kB 1*64kB 0*128kB 0*256kB 1*512kB 0*1024kB 1*2048kB 0*4096kB = 2708kB\nSwap cache: add 1952, delete 1952, find 4/6, race 0+0\nFree swap  = 1040760kB\nTotal swap = 1048568kB\nmaster invoked oom-killer: gfp_mask=0x1200d2, order=0, oomkilladj=0\nPid: 1798, comm: master Not tainted 2.6.24.7-94.el5rt #1\n\nCall Trace:\n [<ffffffff8108782e>] oom_kill_process+0x58/0xfe\n [<ffffffff81087e58>] out_of_memory+0x22b/0x2cb\n [<ffffffff8108acd5>] __alloc_pages+0x27d/0x312\n [<ffffffff810a3a44>] alloc_page_vma+0xb7/0xc6\n [<ffffffff8109e36c>] read_swap_cache_async+0x4f/0x103\n [<ffffffff81093d45>] swapin_readahead+0x61/0xcd\n [<ffffffff810952c8>] handle_mm_fault+0x408/0x764\n [<ffffffff81289ec0>] do_page_fault+0x3ba/0x76d\n [<ffffffff810336d4>] ? default_wake_function+0x0/0x14\n [<ffffffff810336d4>] ? default_wake_function+0x0/0x14\n [<ffffffff810336d4>] ? default_wake_function+0x0/0x14\n [<ffffffff812882d9>] error_exit+0x0/0x51\n [<ffffffff8113c7fd>] ? copy_user_generic_string+0x2d/0x40\n [<ffffffff810bde13>] ? core_sys_select+0x200/0x275\n [<ffffffff81056cd4>] ? getnstimeofday+0x31/0x88\n [<ffffffff8113a2d0>] ? rb_insert_color+0x68/0xe3\n [<ffffffff81041b34>] ? timespec_add_safe+0x37/0x64\n [<ffffffff8105401e>] ? enqueue_hrtimer+0xda/0xe8\n [<ffffffff81054c41>] ? ktime_get_ts+0x46/0x4b\n [<ffffffff810be03f>] ? sys_select+0x7e/0xa6\n [<ffffffff8100c22e>] ? system_call_ret+0x0/0x5\n\nNode 0 DMA per-cpu:\nCPU    0: Hot: hi:    0, btch:   1 usd:   0   Cold: hi:    0, btch:   1 usd:   0\nNode 0 DMA32 per-cpu:\nCPU    0: Hot: hi:  186, btch:  31 usd: 164   Cold: hi:   62, btch:  15 usd:  59\nActive:9 inactive:32 dirty:0 writeback:0 unstable:0\n free:1188 slab:122759 mapped:1 pagetables:377 bounce:0\nNode 0 DMA free:1988kB min:52kB low:64kB high:76kB active:0kB inactive:0kB present:9696kB pages_scanned:0 al\nl_unreclaimable? yes\nlowmem_reserve[]: 0 484 484 484\nNode 0 DMA32 free:2764kB min:2788kB low:3484kB high:4180kB active:156kB inactive:0kB present:495940kB pages_\nscanned:622 all_unreclaimable? yes\nlowmem_reserve[]: 0 0 0 0\nNode 0 DMA: 1*4kB 0*8kB 0*16kB 0*32kB 1*64kB 1*128kB 1*256kB 1*512kB 1*1024kB 0*2048kB 0*4096kB = 1988kB\nNode 0 DMA32: 15*4kB 3*8kB 2*16kB 1*32kB 1*64kB 0*128kB 0*256kB 1*512kB 0*1024kB 1*2048kB 0*4096kB = 2772kB\nSwap cache: add 1968, delete 1968, find 5/8, race 0+0\nFree swap  = 1040760kB\nTotal swap = 1048568kB\n[...]",
        "I had never seen the OOM killer triggers, but rather I did see that\nthe program could get stuck but be killable still by Ctrl-C.\n\nThe problem is that the child processes can still queue new\nFDs over the AF_UNIX socket to the parents side, while the\nparent is exit()'ing and (via exit time FD closing) running\nUNIX garbage collection on those FDs.\n\nThere is no easy way at all to fix this.  There isn't something\nlike a one-to-one relationship between sockets and processes,\nthere is rather potentially a many-to-one relationship.  So ideas\nlike \"don't allow sending FD over AF_UNIX socket for process that\nis exit()'ing\" are totally out of the question.\n\nOne idea that might work, however, is to throttle when UNIX garbage\ncollection is in progress.  I can't say how easy the implementation\nwould be.\n\nThe following might work:\n\n1) Add wait_queue to net/unix/garbage.c\n2) Create a helper function that sleeps until gc_in_progress is false\n3) At the end of unix_gc() where gc_in_progress is cleared to false,\n   perform a wakeup on the waitq added in #1\n4) At all net/unix/af_unix.c calls of scm_send(), first invoke the\n   \"wait until gc_in_progress==false\" thing added in #3\n\nThis should make sendmsg()'s block while any UNIX garbage collection\nis in progress.  Note that this will kill scalability in the case where\nmany UNIX sockets are being closed while many other UNIX sockets are\ndoing SCM fp passing.\n\nI don't know how common that is, probably not enough to care.",
        "Createdattachment 324662[details]Implementation of David's suggestion\n\nHere's my attempt at implementing David's suggestion. I've been running this for an hour or so now and haven't had a soft lockup or oom-killer trigger yet.",
        "Patch looks mostly fine, could you please post this to netdev\nwith proper commit message and signoff?\n\nI'd like to get this fixed upstream.\n\nThanks Dann.",
        "Sent:http://marc.info/?l=linux-netdev&m=122765505415944&w=2",
        "(In reply tocomment #27)> Sent:\n>http://marc.info/?l=linux-netdev&m=122765505415944&w=2Updated patch:http://marc.info/?l=linux-netdev&m=122771908731133&w=2",
        "(In reply tocomment #28)> (In reply tocomment #27)\n> > Sent:\n> >http://marc.info/?l=linux-netdev&m=122765505415944&w=2> \n> Updated patch:\n>http://marc.info/?l=linux-netdev&m=122771908731133&w=2This is a different bug triggered by the same reproducers. I have filed a new bug for this. Please refer tobug 473259. Thanks.",
        "Debian mention of this issue:http://security-tracker.debian.net/tracker/CVE-2008-5029",
        "A user posted an exploit[1] to bugtraq last Friday. It is the same reproducer as the one posted incomment #1. SecurityFocus listed it as a new vulnerability -- Linux Kernel Malformed 'msghdr' Structure Local Denial of Service[2]. This is incorrect, and it should beCVE-2008-5029. Take note.\n\n[1]http://seclists.org/bugtraq/2009/Jan/0000.html[2]http://www.securityfocus.com/bid/33079/info",
        "This issue has been addressed in following products:\n\n  Red Hat Enterprise Linux 3\n\nVia RHSA-2009:1550https://rhn.redhat.com/errata/RHSA-2009-1550.html",
        "This was addressed via:\n\nMRG Realtime for RHEL 5 Server (RHSA-2009:0009)\nRed Hat Enterprise Linux version 4 (RHSA-2009:0014)\nRed Hat Enterprise Linux (v. 5.2.z server) (RHSA-2009:0021)\nRed Hat Enterprise Linux version 5 (RHSA-2009:0225)\nRed Hat Enterprise Linux version 3 (RHSA-2009:1550)"
    ]
}