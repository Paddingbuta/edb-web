import os
import stat

from numpy.testing import TestCase, assert_, assert_raises
from numpy.testing.noseclasses import KnownFailureTest

from scipy.weave import catalog


class TestIntermediateDir(TestCase):
    def test_ownership(self):
        im_dir = catalog.intermediate_dir()
        im_dir_stat = os.stat(im_dir)
        proc_uid = os.getuid()
        assert_(proc_uid == im_dir_stat.st_uid)

    def test_incorrect_ownership(self):
        if os.name == 'posix':
            import pwd
            im_dir = catalog.intermediate_dir()
            old_uid = os.stat(im_dir).st_uid
            old_gid = os.stat(im_dir).st_gid

            nobody = pwd.getpwnam('nobody')[2]
            nobody_g = pwd.getpwnam('nobody')[3]
            try:
                os.chown(im_dir, nobody, nobody_g)
            except Exception:
                raise KnownFailureTest(
                    "Can't set file permissions to expected value.")
            else:
                assert_(not os.path.samefile(catalog.intermediate_dir(), im_dir))

    def test_permissions(self):
        im_dir = catalog.intermediate_dir()
        im_dir_stat = os.stat(im_dir)
        assert_(stat.S_IMODE(im_dir_stat.st_mode) == 0o0700)

    def test_incorrect_permissions(self):
        im_dir = catalog.intermediate_dir()
        old_mod = os.stat(im_dir).st_mode
        try:
            os.chmod(im_dir, 0o000)
        except Exception:
            raise KnownFailureTest(
                "Can't set file permissions to expected value.")
        else:
            assert_(not os.path.samefile(catalog.intermediate_dir(), im_dir))

    def test_symlink(self):
        im_dir = catalog.intermediate_dir()
        assert_(os.path.islink(im_dir) is False)

    def test_symlink_raise(self):
        im_dir = catalog.intermediate_dir()
        import tempfile
        tempdir = tempfile.mkdtemp(prefix='scipy-test')
        try:
            os.rename(im_dir, tempdir)
        except Exception:
            raise KnownFailureTest(
                "Can't move intermediate dir.")
        try:
            os.symlink(tempdir, im_dir)
        except Exception:
            raise KnownFailureTest(
                "Can't create symlink to intermediate dir.")
        assert_(not os.path.samefile(catalog.intermediate_dir(), im_dir))
