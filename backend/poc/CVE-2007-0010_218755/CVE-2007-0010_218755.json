{
    "bugid": "218755",
    "cveid": [
        "CVE-2007-0010"
    ],
    "summary": "CVE-2007-0010 GdbPixbufLoader fails to handle invalid input from Evolution correctly",
    "alias": "None",
    "product": "Fedora",
    "hardware": "All",
    "os": "Linux",
    "url": "",
    "reported_date": "2006-12-07 11:07 UTC byArjan van de Ven",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=143153"
    ],
    "comment": [
        "Description of problem:\n\n\nevolution crashes on the spam mail I'll attach as mbox; the crash may well turn\nout to be a security issue in itself. But just crashing is serious since the\nnext time evo opens it immediately goes back to the same mail and crashes again,\nso a non-expert user cannot recover from this.\n\nI suspect RHEL5 is affected too",
        "Createdattachment 143043[details]mbox with the crashing mail",
        "The file \"navigable.gif\" is incorrectly encoded. I think evolution should not\nfeed underlying gdk with the corrupted data, but I doubt an assertion failure\nthere is the right way to handle the faulty gif.\n\nWhen you extract the file (with reformime or evolution) and either try to view\nit with firefox or gqview or embed it in another email message and open in\nevolution it is correctly reported as being broken.\n\nMoreover there's some interesting stuff in the broken base64 data: for example\nthe IN-SB-8XX-PLATFORMS string encoded there. How could it happen to came there?\nMaybe this message was meant to exploit some windows software or encoded by a\nhorribly broken software? I got no smarter after disassembling the 8bit parts of\nthe part.",
        "Createdattachment 143153[details]Backtrace from FC6\n\nevolution-2.8.2.1-2.fc6\ngtk2-2.10.4-6.fc6",
        "Looks like memory corruption to me. \nI don't see how that assert can trigger, unless something scribbles over the\npixbuf, since all pixbuf_new calls in the gif loader create pixbufs with alpha.",
        "I found that gtkhtml ignores the return value of gdk_pixbuf_loader_write() and\njust continues throwing invalid data at the loader.\nAdmittedly, the GdkPixbufLoader documentation makes it sound as if that was ok, \nsince it says that the loader is closed if write() returns FALSE. This is not \nactually the case right now. I'll attach a patch which changes gdk-pixbuf to \nbehave as documented. This fixes the bug.",
        "Createdattachment 143235[details]close-loader.patch",
        "should gdk_pixbuf_loader_write() be marked for warning on unused results? \n(the gcc feature that causes it to warn if you don't actually use the result of\na function)",
        "Possibly, but lets discuss that upstream.",
        "interesting that Red Hat considers this \"EMBARGOED\"; I consider it very public \nalready; the mail that exposed the bug is already distributed outside embargo \nanyway.\n\nI would suggest that RH removes the embargoed status of this bug.",
        "(In reply tocomment #9)> interesting that Red Hat considers this \"EMBARGOED\"; I consider it very public \n> already; the mail that exposed the bug is already distributed outside embargo \n> anyway.\n> \n> I would suggest that RH removes the embargoed status of this bug.Okay, I am removing the Security sensitive flag, and EMBARGO, as you wish.\nI thought it should be embargoed because it was reported via private\nvendor-sec mailing list, and the bug was flagged Security sensitive."
    ]
}