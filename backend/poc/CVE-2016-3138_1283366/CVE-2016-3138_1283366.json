{
    "bugid": "1283366",
    "cveid": [
        "CVE-2016-3138"
    ],
    "summary": "CVE-2016-3138 Local RedHat Enterprise Linux DoS \u2013 RHEL 7.1 Kernel crashes on invalid  USB device descriptors (cdc_acm driver) [local-DoS]",
    "alias": "None",
    "product": "Red Hat Enterprise Linux 7",
    "hardware": "Unspecified",
    "os": "Unspecified",
    "url": "",
    "reported_date": "2015-11-18 19:59 UTC byRalf Spenneberg",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=1096266",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=1096267",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=1096268"
    ],
    "comment": [
        "Description of problem:\ncal RedHat Enterprise Linux DoS \u2013 RHEL 7.1 Kernel crashes on invalid \nUSB device descriptors (cdc_acm driver) [local-DoS]\n\nVersion-Release number of selected component (if applicable):\nKernel-Version: 3.10.0-229.20.1.el7.x86_64 \n\nHow reproducible:\nalways\n\nOpenSource Security Ralf Spenneberg\nAm Bahnhof 3-5\n48565 Steinfurt\ninfo\n\n\nDate: November 12th, 2015\nAuthors: Sergej Schumilo, Hendrik Schwartke, Ralf Spenneberg\nCVE: not yet assigned\nCVSS: 4.9 (AV:L/AC:L/Au:N/C:N/I:N/A:C) \nTitle: Local RedHat Enterprise Linux DoS \u2013 RHEL 7.1 Kernel crashes on invalid \nUSB device descriptors (cdc_acm driver) [local-DoS]\nSeverity: Critical. The Kernel panics. A reboot is required.\nEase of Exploitation: Trivial\nVulnerability type: Wrong input validation\nProducts: RHEL 7.1 including all updates\nKernel-Version: 3.10.0-229.20.1.el7.x86_64 \n(for debugging-purposes we used the CentOS Kernel kernel-debuginfo-3.10.0-229.14.1.el7)\n\n\nAbstract\nThe Kernel 3.10.0-229.20.1.el7.x86_64 crashes when presented a buggy USB \ndevice which requires the cdc_acm driver.\nDetailed product description\nWe confirmed the bug on the following system:\nRHEL 7.1\nKernel = 3.10.0-229.20.1.el7.x86_64\nFurther products or kernel versions have not been tested.\nHow reproducible: Always\nActual results: Kernel crashes \n\nDescription:\nThe bug was found using the USB-fuzzing framework vUSBf from Sergej Schumilo \n(github.com/schumilo) using the following device descriptor:\n\n ######### PAYLOAD 1 #########\n[*] Device-Descriptor\n  bLength:\t\t0x12\n  bDescriptorType:\t0x1\n  bcdUSB:\t\t0x200\n  bDeviceClass:\t\t0x3\n  bDeviceSubClass:\t0x0\n  bDeviceProtocol:\t0x0\n  bMaxPacketSize:\t0x40\n  idVendor:\t\t0x482\n  idProduct:\t\t0x203\n  bcdDevice:\t\t0x100\n  iManufacturer:\t0x1\n  iProduct:\t\t0x2\n  iSerialNumbers:\t0x3\n  bNumConfigurations:\t0x1\n\nThis is the configuration descriptor containing only one interface descriptor.\nThe cdc-acm driver assumes that there will be at least two interface-descriptors with associated endpoint-descriptors. \nSince the cdc-acm driver is expecting a second interface descriptor, the driver tries to dereference a null-pointer.\nThis results in a crash of the system. \n\n****\n$ nm cdc-acm.ko.debug | grep acm_probe\n0000000000001530 t acm_probe\n$ addr2line -e cdc-acm.ko.debug 0x179C\n/usr/src/debug/kernel-3.10.0-229.14.1.el7/linux-3.10.0-229.14.1.el7.x86_64/drivers/usb/class/cdc-acm.c:1229\n****\n\n**** CentOS-Kernel linux-3.10.0-229.14.1.el7 (drivers/usb/class/cdc-acm.c)\n        ...\n1093\t/* handle quirks deadly to normal probing*/\n1094\tif (quirks == NO_UNION_NORMAL) {\n1095\t\tdata_interface = usb_ifnum_to_if(usb_dev, 1);  /* possible null-pointer */\n1096\t\tcontrol_interface = usb_ifnum_to_if(usb_dev, 0);\n1097\t\tgoto skip_normal_probe;\n1098\t}\n        ...\n1226 skip_normal_probe:\n1227\n1228\t/*workaround for switched interfaces */\n1229\tif (data_interface->cur_altsetting->desc.bInterfaceClass /* null-pointer dereference */\n1230\t\t\t\t\t\t!= CDC_DATA_INTERFACE_TYPE) {\n1231\t\tif (control_interface->cur_altsetting->desc.bInterfaceC\n        ...\n****\n\n\t[*] Configuration-Descriptor\n\t  bLength:\t\t0x9\n\t  bDescriptorType:\t0x2\n\t  wTotalLength:\t\t0x27\n\t  bNumInterfaces:\t0x1\n\t  bConfigurationValue:\t0x1\n\t  iConfiguration:\t0x0\n\t  bmAttributes:\t\t0x0\n\t  bMaxPower:\t\t0x31\n\t\t[*] Interface-Descriptor\n\t\t  bLength:\t\t0x9\n\t\t  bDescriptorType:\t0x4\n\t\t  bInterfaceNumber:\t0x0\n\t\t  bAlternateSetting:\t0x0\n\t\t  bNumEndpoints:\t0x0\n\t\t  bInterfaceClass:\t0x0\n\t\t  bInterfaceSubClass:\t0x0\n\t\t  bInterfaceProtocol:\t0x0\n\t\t\t[*] Endpoint-Descriptor\n\t\t\t  bLength:\t\t0x7\n\t\t\t  bDescriptorType:\t0x5\n\t\t\t  bEndpointAddress:\t0x81\n\t\t\t  bmAttribut:\t\t0x3\n\t\t\t  wMaxPacketSize:\t0x404\n\t\t\t  bInterval:\t\t0xc\n\t\t\t[*] Endpoint-Descriptor\n\t\t\t  bLength:\t\t0x7\n\t\t\t  bDescriptorType:\t0x5\n\t\t\t  bEndpointAddress:\t0x1\n\t\t\t  bmAttribut:\t\t0x2\n\t\t\t  wMaxPacketSize:\t0x4\n\t\t\t  bInterval:\t\t0xc\n\t\t\t[*] Endpoint-Descriptor\n\t\t\t  bLength:\t\t0x7\n\t\t\t  bDescriptorType:\t0x5\n\t\t\t  bEndpointAddress:\t0x82\n\t\t\t  bmAttribut:\t\t0x1\n\t\t\t  wMaxPacketSize:\t0x4\n\t\t\t  bInterval:\t\t0xc\n\nProof of Concept:\n1) The bug can be reproduced using USB-fuzzing framework vUSBf from Sergej Schumilo (github.com/schumilo). \nThe attached vUSBf-obj file contains the payload. Please let us know if you would like to use the Facedancer board. \nIn such case, we could also provide a patched version of vUSBf which allows to reproduce vUSBf-Payloads using the Facedancer board.\n2) For a proof of concept we are providing also an Arduino firmware file. Just flash it \non Arduino Leonardo and plug it into any RHEL machine. The Arduino will \nemulate the defective USB device.\n\n   avrdude -v -p ATMEGA32u4 -c avr109 -P /dev/ttyACM0 -b 57600 -U flash:w:binary.hex\n\nThe file binary.hex has been attached to this bug report.\nTo prevent automated sending of payloads, use a jumper to connect port D3 and \n5V!\n\n\nSeverity and Ease of Exploitation\nThe security weakness can be easily exploited. Using our Arduino firmware only \nphysical access to the system is required. \n\n\nAdditional info:\nStacktrace, vUSBf-Payload, Arduino-Firmware attached.\n\n\nPlease assign a CVE for this issue since this is a local DoS of the targeted system. \nCVSS 4.9 (AV:L/AC:L/Au:N/C:N/I:N/A:C)",
        "Createdattachment 1096266[details]vUSBf Payload",
        "Createdattachment 1096267[details]Stacktrace",
        "Createdattachment 1096268[details]Arduino firmware demonstrating the bug",
        "Public via:http://seclists.org/bugtraq/2016/Mar/54",
        "CVEID was requested at:http://seclists.org/oss-sec/2016/q1/605",
        "CVE-2016-3138was assigned to this flaw, please, use it in the related communications, seehttp://seclists.org/oss-sec/2016/q1/622.",
        "Patch was sent upstream forCVE-2016-3138, many thanks to Oliver Neukum:http://marc.info/?l=linux-usb&m=145803342320160&w=2",
        "Thank you for reporting this flaw. The Product Security has rated this flaw as having low security impact (bz#1316204), so the patch is currently not planned to be added to the RHEL source trees. If accepted to the upstream, the patch may get to the RHEL trees later at the next USB subsystem code rebase."
    ]
}