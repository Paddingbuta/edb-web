{
    "bugid": "446902",
    "cveid": [
        "CVE-2008-2363"
    ],
    "summary": "CVE-2008-2363 pan: heap overflow caused by large *.nzb files",
    "alias": "CVE-2008-2363",
    "product": "Security Response",
    "hardware": "x86_64",
    "os": "Linux",
    "url": "",
    "reported_date": "2008-05-16 16:01 UTC byPavel Polischouk",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=306290",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=306292",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=306293",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=306294",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=306296",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=306297"
    ],
    "comment": [
        "Description of problem:\n\n\nVersion-Release number of selected component (if applicable):\npan-0.132-2.fc8.x86_64\n\nHow reproducible:\nAlways\n\nSteps to Reproduce:\n  Start pan from the command line\n  \nActual results:\n\npan: parts.cc:244: void pan::Parts::set_parts(const pan::PartBatch&): Assertion\n`pch == part_mid_buf + part_mid_buf_len' failed.\nAborted\n\n\nExpected results:\n\nPAN starts\n\nAdditional info:",
        "Createdattachment 306290[details]Tasks.nzb causing corrupted double-linked list abort from glibc",
        "Debugged the problem further. It happens when trying to load a huge tasks.nzb\n(around 95000 lines). When the file is split into two parts by copying and\nremoving extra <file>...</file> sections, each part loads successfully.\nThis most likely means state corruption in nzb parser by certain input.\n\nAttaching the bad nzb files that cause: assertion, segmentation fault, or abort\ninside glibc (double-linked list corruption detected).",
        "Createdattachment 306292[details]Glibc-generated stack trace from abort",
        "Createdattachment 306293[details]Tasks.nzb causing pan to segfault",
        "Createdattachment 306294[details]Stack trace from segfault",
        "Createdattachment 306296[details]Tasks.nzb causing assertion in pan.",
        "Createdattachment 306297[details]Stack trace from assertion",
        "Found the root cause of the problem.\n\nPartsBatch class has inconsistent storage for Parts. For each new batch, it does\nnot clear() the 'parts' variable, but only resize()s it if the new batch is\nbigger (pan/data/parts.cc, lines 307 and 316). If the new batch is smaller than\nthe previous, extra entries are untouched.\n\nThe problem happens when pan attempts to sort the full vector\n(pan/tasks/nzb.cc:128), thus possibly mixing the parts from the current batch\nwith the parts from the previous batches.\n\nThe solution is to clear() the 'parts' vector on each init(), then push_back()\nthe new parts in add_part, so the vector size always corresponds to the real\nnumber of found parts.",
        "Createdattachment 306880[details]Fix the assertion in PAN due to sorting of an array containing redundant elements\n\nAdded proper handling of PartBatch::parts vector.\nFixed allocation policy of Part::packed_mid element to re-allocate it every\ntime rather than trying to reuse a previous instance.\n\nSigned-off by: pavelvp",
        "Note that when compiled with -O0 for ease of debugging, abort or segfault never\nhappen, assertion always happens instead.",
        "I'm assigning this issueCVE-2008-2363.  From the look of this, it looks like a\npretty generic heap overflow, which means we can't rule out arbitrary code\nexecution.",
        "Added dependency onbug 433970.\nBuilding pan rpm with this assertion fix for F9 is impossible without\ncompilation fixes here:https://bugzilla.redhat.com/attachment.cgi?id=306299",
        "Moving to Security Response product, creating tracking bugs.",
        "Current Pan in Fedora is 0.135+ and this was fixed in 0.133 (http://pan.rebelbase.com/download/releases/0.133/)."
    ]
}