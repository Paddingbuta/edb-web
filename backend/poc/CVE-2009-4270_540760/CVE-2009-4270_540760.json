{
    "bugid": "540760",
    "cveid": [
        "CVE-2009-4270"
    ],
    "summary": "CVE-2009-4270 ghostscript buffer overflow in cups output driver",
    "alias": "CVE-2009-4270",
    "product": "Fedora",
    "hardware": "All",
    "os": "Linux",
    "url": "",
    "reported_date": "2009-11-24 03:01 UTC byKieran Clancy",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=373324",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=373325",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=373445",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=373446"
    ],
    "comment": [
        "Createdattachment 373324[details]ghostscript backtrace\n\nDescription of problem:\nWhen cups prints a PDF, it passes it at some point through pstoraster which calls gs. I noticed a PDF I was working on caused printing to fail, and it appears that some of the debugging output (which pstoraster turns on) from the gs cups driver can trigger a buffer overflow in the gs debug handling (which uses vsprintf - bad bad bad).\n\nI think there are two issues here. One is that somehow gs ended up with MediaType argument without null termination (at least that's how it appears). The other is that ghostscript's print handling code uses (v)sprintf when it should be using (v)snprintf. In fact, ghostscript uses (v)sprintf with an \"%s\" format modifier over 50 times in the source code, several instances of which are probably unsafe (such as here).\n\nConsider the following code from base/gsmisc.c:\nint errprintf(const gs_memory_t *mem, const char *fmt, ...) {\n...\n    char buf[PRINTF_BUF_LENGTH];\n...\n    count = vsprintf(buf, fmt, args);\n    errwrite(mem, buf, count);\n    if (count >= PRINTF_BUF_LENGTH) {\n        count = sprintf(buf,\n            \"PANIC: printf exceeded %d bytes.  Stack has been corrupted.\\n\",\n            PRINTF_BUF_LENGTH);\n        errwrite(mem, buf, count);\n    }\n...\n\nJust marvellous -- ghostscript expects vsprintf to return sanely if it overflows (which it doesn't), and then expects to print a nice panic message. It would be a 5 line patch to fix this so that it uses vsnprintf, and if count+1 exceeds the buffer length then it can print a warning that the message was truncated instead. Same goes for outprintf.\n\nI will attach the stack trace from gdb, the cups error log and the PDF which caused the problem.\n\nI wasn't sure if this was security-sensitive or not, but I ticked the box just to be on the safe side. With all the sanity checking that gcc adds to (v)sprintf these days, it's probably very hard to exploit.\n\nVersion-Release number of selected component (if applicable):\nghostscript-8.70-1.fc12.i686\n\nHow reproducible:\nNo idea - works every time on this PDF though.\n\nSteps to Reproduce:\n1. Open PDF in evince\n2. Print PDF to any printer\n3. Wait for message saying \"printing failed\" or somesuch.\n\nAdditional info:\nTo attach gdb, I put a 'sleep 20' command in the pstoraster shell script (/usr/lib/cups/filter/pstoraster) just before it executed gs, then I \"printed\" the PDF, found the sleeping bash process and attached gdb to it.",
        "Createdattachment 373325[details]cups error log",
        "Createdattachment 373326[details]PDF which can trigger the buffer overflow",
        "Thanks very much for the report.  I'd like to try to catch the \"bad MediaType\" problem as well as the ghostscript vsprintf problem.  Please attach:\n\n1. the PPD for the queue (from /etc/cups/ppd/), and\n2. the /etc/cups/printers.conf file",
        "Createdattachment 373445[details]cups printers.conf\n\n(usernames+passwords have been removed from this file)",
        "Createdattachment 373446[details]HP Laserjet 6L PPD",
        "OK, both problems found now, thanks.",
        "Createdattachment 373495[details]ghostscript-vsnprintf.patch\n\nThis is the patch for the more general problem that the errprintf and outprintf functions use the unsafe vsprintf function instead of vsnprintf, leading to an overflow if '%s' is used with an unterminated string. (The dprintf2 macro uses errprintf.)",
        "This affects all versions of Fedora.",
        "This issue does not affect Red Hat Enterprise Linux due it using the older versions of ghostscript.\n\nThe incorrect debug logging code in gdevcups.c is not present in ghostscript\n8.15 and earlier; it was introduced in version 8.64.  Likewise, in order to exploit this the MediaType string needs to be larger than the 1024-byte buffer in errprintf, but in older versions of ghostscript, gdevcups does not write out the MediaType string in its debug logging at all.  There are also no other calls to errprint or outprintf that use the %s specifier with user-supplied strings.",
        "Upstream responded, and it looks like this issue was already noted to them:http://bugs.ghostscript.com/show_bug.cgi?id=690829",
        "This was assignedCVE-2009-4270",
        "ghostscript-8.70-2.fc11 has been submitted as an update for Fedora 11.http://admin.fedoraproject.org/updates/ghostscript-8.70-2.fc11",
        "ghostscript-8.70-2.fc12 has been submitted as an update for Fedora 12.http://admin.fedoraproject.org/updates/ghostscript-8.70-2.fc12",
        "Note: This is not a security flaw in Fedora, as the overflow is caught by FORTIFY_SOURCE resulting in a controlled process termination.",
        "ghostscript-8.70-2.fc12 has been pushed to the Fedora 12 testing repository.  If problems still persist, please make note of it in this bug report.\n If you want to test the update, you can install it with \n su -c 'yum --enablerepo=updates-testing update ghostscript'.  You can provide feedback for this update here:http://admin.fedoraproject.org/updates/F12/FEDORA-2010-0327",
        "ghostscript-8.70-2.fc11 has been pushed to the Fedora 11 testing repository.  If problems still persist, please make note of it in this bug report.\n If you want to test the update, you can install it with \n su -c 'yum --enablerepo=updates-testing update ghostscript'.  You can provide feedback for this update here:http://admin.fedoraproject.org/updates/F11/FEDORA-2010-0350",
        "ghostscript-8.70-2.fc12 has been pushed to the Fedora 12 stable repository.  If problems still persist, please make note of it in this bug report.",
        "ghostscript-8.70-2.fc11 has been pushed to the Fedora 11 stable repository.  If problems still persist, please make note of it in this bug report."
    ]
}