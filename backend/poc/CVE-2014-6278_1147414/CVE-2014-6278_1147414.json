{
    "bugid": "1147414",
    "cveid": [
        "CVE-2014-6278"
    ],
    "summary": "CVE-2014-6278 bash: incorrect parsing of function definitions with nested command substitutions",
    "alias": "CVE-2014-6278",
    "product": "Security Response",
    "hardware": "All",
    "os": "Linux",
    "url": "",
    "reported_date": "2014-09-29 08:40 UTC byHuzaifa S. Sidhpurwala",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=944106"
    ],
    "comment": [
        "A security flaw was found in bash, which could be exploited remotely via applications which parse untrusted user scripts via bash. This flaw is different fromCVE-2014-6277,CVE-2014-7169andCVE-2014-7186.",
        "This issue is mentioned publicly in Michal Zalewski's blog post:http://lcamtuf.blogspot.com/2014/09/bash-bug-apply-unofficial-patch-now.htmlIt does not provide any details of the issue other than describing it as:\n\n  ... I also bumped in the sixth and most severe issue so far, essentially\n  permitting very simple and straightforward remote code execution\n  (CVE-2014-6278) on the systems that are patched against the first bug. It's\n  a \"put your commands here\" type of a bug similar to the original report. I\n  will post additional details in a couple of days to give people enough time\n  to upgrade.\n\nHowever, the bash updates for Red Hat Enterprise Linux released via RHSA-2014:1306, RHSA-2014:1311, and RHSA-2014:1312 include a function name mangling patch as described inbug 1146319 comment 51.  It prevents exploitation of this issue by making bash only use environment variables with specific names (currently BASH_FUNC_*()) to define functions from its environment.  This change blocks currently known exploitation vectors and is also recommended by Michal Zalewski, the original reporter of this issue.\n\nLinks to errata that introduced the function name mangling patch:https://rhn.redhat.com/errata/RHSA-2014-1306.htmlhttps://rhn.redhat.com/errata/RHSA-2014-1311.htmlhttps://rhn.redhat.com/errata/RHSA-2014-1312.htmlKnowledge base article for the \"Shellshock\" vulnerability, that also explains the function name mangling change in the \"How does this impact systems\" section:https://access.redhat.com/articles/1200223This bug will be updated with further details of this particular issue once they are made public.",
        "***Bug 1148661has been marked as a duplicate of this bug. ***",
        "Further details:http://seclists.org/fulldisclosure/2014/Oct/9http://lcamtuf.blogspot.com/2014/10/bash-bug-how-we-finally-cracked.html",
        "Another user experienced a similar problem:\n\nThis was caused by attempting Exploit 7 (CVE-2014-6277) listed on shellshocker.net:\nbash -c \"f() { x() { _;}; x() { _;} <<a; }\" 2>/dev/null || echo vulnerable\n\nreporter:       libreport-2.2.3\nbacktrace_rating: 4\ncmdline:        bash -c 'f() { x() { _;}; x() { _;} <<a; }'\ncrash_function: strlen\nexecutable:     /usr/bin/bash\nkernel:         3.16.3-200.fc20.x86_64\npackage:        bash-4.2.48-2.fc20\nreason:         bash killed by SIGSEGV\nrunlevel:       N 5\ntype:           CCpp\nuid:            1000",
        "Createdattachment 944106[details]File: backtrace",
        "Another user experienced a similar problem:\n\nRunning bash check script athttps://raw.githubusercontent.com/hannob/bashcheck/master/bashcheckreporter:       libreport-2.2.3\nbacktrace_rating: 4\ncmdline:        /usr/bin/bash -c 'f(){ x(){ _;};x(){ _;}<<a;}'\ncrash_function: strlen\nexecutable:     /usr/bin/bash\nkernel:         3.16.3-200.fc20.i686\npackage:        bash-4.2.48-2.fc20\nreason:         bash killed by SIGSEGV\nrunlevel:       N 5\ntype:           CCpp\nuid:            1000",
        "We can reproduce this parser bug.  But we treat this as a regular bug, not a security bug, because of the fixes mentioned incomment #2.",
        "This parser bug was corrected upstream in bash 4.3p30, 4.2p53, 4.1p17, 4.0p44, 3.2p57, 3.1p23, 3.0p22 and 2.05b p13.http://ftp.gnu.org/gnu/bash/bash-4.3-patches/bash43-030",
        "Statement:\n\nRed Hat no longer considers this bug to be a security issue. The change introduced in bash errata RHSA-2014:1306, RHSA-2014:1311 and RHSA-2014:1312 removed the exposure of the bash parser to untrusted input, mitigating this problem to a bug without security impact."
    ]
}