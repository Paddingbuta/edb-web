{
    "bugid": "1179672",
    "cveid": [
        "CVE-2015-0219"
    ],
    "summary": "CVE-2015-0219 Django: WSGI header spoofing via underscore/dash conflation",
    "alias": "CVE-2015-0219",
    "product": "Security Response",
    "hardware": "All",
    "os": "Linux",
    "url": "",
    "reported_date": "2015-01-07 10:04 UTC byMartin Prpi\u010d",
    "attachment": [
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=977180",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=977181",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=977182",
        "https://bugzilla-attachments.redhat.com/attachment.cgi?id=977183"
    ],
    "comment": [
        "The Django project reports the following issue:\n\n\"\"\"\nWhen HTTP headers are placed into the WSGI environ, they are normalized by converting to uppercase, converting all dashes to underscores, and prepending `HTTP_`. For instance, a header ``X-Auth-User`` would become ``HTTP_X_AUTH_USER`` in the WSGI environ (and thus also in Django's ``request.META`` dictionary).\n\nUnfortunately, this means that the WSGI environ cannot distinguish between headers containing dashes and headers containing underscores: ``X-Auth-User`` and ``X-Auth_User`` both become ``HTTP_X_AUTH_USER``. This means that if a header is used in a security-sensitive way (for instance, passing authentication information along from a front-end proxy), even if the proxy carefully strips any incoming value for ``X-Auth-User``, an attacker may be able to provide an ``X-Auth_User`` header (with underscore) and bypass this protection.\n\nIn order to prevent such attacks, both Nginx and Apache 2.4+ strip all headers containing underscores from incoming requests by default. Django's built-in development server now does the same. Django's development server is not recommended for production use, but matching the behavior of common production servers reduces the surface area for behavior changes during deployment.\n\"\"\"\n\nThis issue is resolved in the upstream versions 1.7.3, 1.6.10, and 1.4.18. Note that Django 1.5 is no longer receiving security updates.\n\nAcknowledgements:\n\nRed Hat would like to thank the upstream Django project for reporting this issue.",
        "Createdattachment 977180[details]headers-1.4.x.patch",
        "Createdattachment 977181[details]headers-1.6.x.patch",
        "Createdattachment 977182[details]headers-1.7.x.patch",
        "Createdattachment 977183[details]headers-master.patch",
        "Created Django14 tracking bugs for this issue:\n\nAffects: epel-6 [bug 1181942]",
        "Created python-django14 tracking bugs for this issue:\n\nAffects: fedora-20 [bug 1181940]",
        "Created python-django tracking bugs for this issue:\n\nAffects: fedora-all [bug 1181939]\nAffects: epel-7 [bug 1181941]",
        "External References:https://www.djangoproject.com/weblog/2015/jan/13/security/",
        "python-django-1.6.10-1.fc21 has been pushed to the Fedora 21 stable repository.  If problems still persist, please make note of it in this bug report.",
        "python-django14-1.4.18-1.fc20 has been pushed to the Fedora 20 stable repository.  If problems still persist, please make note of it in this bug report.",
        "python-django-1.6.10-1.fc20 has been pushed to the Fedora 20 stable repository.  If problems still persist, please make note of it in this bug report.",
        "python-django-1.6.10-1.el7 has been pushed to the Fedora EPEL 7 stable repository.  If problems still persist, please make note of it in this bug report.",
        "all related bz have been closed."
    ]
}