[jjelen@jjelen tmp]$ cat test.c
// gcc test.c -o "a space.out"
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>
#include <string.h>

int main(void) {
    char *line = NULL, *tty = NULL;
    size_t linesize = 0;
    ssize_t len;
    int i;

    /* Try to determine the tty from tty_nr in /proc/pid/stat. */
    for (i = 0; tty == NULL && i < 2; i++) {
	FILE *fp;
	char path[256];
	(void)snprintf(path, sizeof(path), "/proc/%u/stat",
	    i ? (unsigned int)getppid() : (unsigned int)getpid());
	if ((fp = fopen(path, "r")) == NULL)
	    continue;
	len = getline(&line, &linesize, fp);
	printf("line = %s\n", line);
	fclose(fp);
	if (len != -1) {
	    /*
	     * Field 7 is the tty dev (0 if no tty).
	     * Since the process name at field 2 "(comm)" may include spaces,
	     * start at the last ')' found.
	     */
	    char *cp = strrchr(line, ')');
	    int field = 2;
	    //char *cp = line;
	    //int field = 1;
	    while (*cp != '\0') {
		if (*cp++ == ' ') {
		    if (++field == 7) {
			dev_t tdev = (dev_t)atoi(cp);
			if (tdev > 0)
			    printf("tdev = %d\n", (int) tdev);
			break;
		    }
		}
	    }
	}
    }
}
